

#debug: true
server:
  port: 10000
#  ssl:
#    key-store: classpath:server.jks
#    key-store-password: password
#    key-password: password

spring:
  aop:
    proxy-target-class: true
logging:
  path: /yy/logs/yy_micro/baseplatform/
  level:
    org.springframework.security: DEBUG
zuul:
  sensitive-headers: '' #Distribute headers cookies to children
  add-proxy-headers: true
  routes:
    authserver:
      path: /uaa/**
      stripPrefix: true
  #    url: http://${AUTHSERVER_SERVICE_HOST}:${AUTHSERVER_SERVICE_PORT}/uaa
      serviceId: authserver
    user:
      path: /user/**
      url: https://192.168.99.100:9000/authserver/uaa/authsec/userinfo
    adminui:
      path: /adminui/**
      serviceId: adminui
 #     stripPrefix: false
    market:
      path: /marketplace/**
      serviceId: marketplace-api
    basis:
      path: /basis/**
      serviceId: basis-api
#      url: http://localhost:9303
    productmgmt:
      path: /productmgmt/**
      serviceId: productmgmt
    submgmt:
      path: /submgmt/**
      serviceId: submgmt
    usermgmt:
      path: /usermgmt/**
      serviceId: usermgmt
    workflow:
      path: /workflow/**
      serviceId: workflow
    ordermgmt:
      path: /ordermgmt/**
      serviceId: ordermgmt
    sysbase:
      path: /sysbase/**
      serviceId: sysbase
    dashboard:
      path: /dashboard/**
      serviceId: dashboard
    

eureka:
  client:
    serviceUrl:
      defaultZone: http://${DISCOVERY_SERVICE_HOST}:${DISCOVERY_SERVICE_PORT}/eureka/
  instance:
    preferIpAddress: true
    
#management:
#  security:
#    enabled: false

#security:
#  sessions: NEVER #"security.sessions" setting means that Spring Security will accept cookies as authentication tokens but won't create them unless they already exist.
#  basic:
#    enabled: false
#  user:
 #   password: none

ribbon:
  ConnectTimeout: 600000
  ReadTimeout: 600000
  eureka:
    enabled: true
    ReadTimeout: 600000
    MaxAutoRetries: 1

hystrix:
  command:
    frontend:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 600000
    admin:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 600000
    marketplace:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 600000
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 600000

proxy:
  auth:
    routes:
      basis: oauth2

security:
#  sessions: NEVER #"security.sessions" setting means that Spring Security will accept cookies as authentication tokens but won't create them unless they already exist.
  basic:
    enabled: false
  ignored: /, /**/*.html,/authsec/users/loadByLoginName,/*/swagger**,/*/swagger**/**, /*/webjars/**, /*/v2/**, /*/js/**, /*/css/**
  oauth2:
    client:
      client-id: fox-service
      client-secret: secret
      access-token-uri: http://authserver:9001/uaa/oauth/token
      grant-type: client_credentials
    resource:
      token-info-uri: http://authserver:9001/uaa/oauth/check_token
  sessions: stateless
